import {
  /* inject, */
  globalInterceptor,
  bind,
  Interceptor,
  Provider,
} from '@loopback/context';

/**
 * This class will be bound to the application as a global `Interceptor` during
 * `boot`
 */
@globalInterceptor('<%= group %>')
export class <%= className %> implements Provider<Interceptor> {
  /*
  constructor() {}
  */

  value() {
    const interceptor: Interceptor = async (invocationCtx, next) => {
      // Add pre-invocation logic here
      const result = await next();
      // Add post-invocation logic here
      return result;
    }
    return interceptor;
  }
}
